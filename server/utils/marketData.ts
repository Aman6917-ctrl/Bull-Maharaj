import { MARKET_INDICES, MARKET_SENTIMENT, generateChartData } from './constants';

/**
 * Fetches market overview data
 * This would connect to real market APIs in a production system
 */
export async function getMarketOverview() {
  // In a real implementation, this would fetch from external APIs
  // For now, return mock data
  return {
    indices: MARKET_INDICES,
    lastUpdated: new Date().toISOString()
  };
}

/**
 * Fetches market sentiment data
 * This would be generated by real ML models in a production system
 */
export async function getMarketSentiment() {
  // In a real implementation, this would use ML models
  // For now, return mock data
  return {
    ...MARKET_SENTIMENT,
    lastUpdated: new Date().toISOString()
  };
}

/**
 * Fetches performance chart data for the trading bot
 */
export async function getBotPerformanceChartData() {
  // Generate mock performance data
  // In a real implementation, this would be calculated from actual bot performance
  return generateChartData(30, "up");
}

/**
 * Fetches stock price chart data
 */
export async function getStockPriceChartData(stockSymbol: string, days: number = 30) {
  // In a real implementation, this would fetch historical data from external APIs
  // For now, generate mock data based on stock symbol
  // Use the last character of the symbol to determine the trend
  const lastChar = stockSymbol.charAt(stockSymbol.length - 1);
  const lastDigit = parseInt(lastChar) || 0;
  
  let trend: "up" | "down" | "volatile";
  if (lastDigit < 3) {
    trend = "down";
  } else if (lastDigit < 7) {
    trend = "volatile";
  } else {
    trend = "up";
  }
  
  return generateChartData(days, trend);
}
